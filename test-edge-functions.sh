#!/bin/bash
# Script para testar as fun√ß√µes Edge localmente

echo "üî¨ Testando fun√ß√µes Edge do Supabase"

# Verificar instala√ß√£o do Supabase CLI
if ! command -v supabase &> /dev/null; then
    echo "‚ùå CLI do Supabase n√£o encontrado!"
    echo "Instale com: brew install supabase/tap/supabase"
    exit 1
fi

# Obter token de acesso JWT para teste
echo "üîë Obtendo token JWT para testes..."
TOKEN=$(supabase tokens get)

if [ -z "$TOKEN" ]; then
    echo "‚ùå Falha ao obter token JWT. Fa√ßa login primeiro com 'supabase login'"
    exit 1
fi

# Cores para sa√≠da
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Testar fun√ß√£o user-management
test_user_management() {
    echo -e "\n${GREEN}üß™ Testando fun√ß√£o user-management...${NC}"
    
    # Testar a fun√ß√£o para obter um usu√°rio
    echo "üì• Enviando requisi√ß√£o para buscar usu√°rio..."
    RESPONSE=$(curl -s -X POST "http://localhost:54321/functions/v1/user-management" \
      -H "Authorization: Bearer $TOKEN" \
      -H "Content-Type: application/json" \
      -d '{"action":"getUser","userId":"COLOQUE_UM_ID_DE_USUARIO_VALIDO_AQUI"}')
    
    echo "üì§ Resposta:"
    echo "$RESPONSE" | jq
}

# Testar fun√ß√£o list-users
test_list_users() {
    echo -e "\n${GREEN}üß™ Testando fun√ß√£o list-users...${NC}"
    
    # Testar a fun√ß√£o para listar usu√°rios
    echo "üì• Enviando requisi√ß√£o para listar usu√°rios..."
    RESPONSE=$(curl -s -X POST "http://localhost:54321/functions/v1/list-users" \
      -H "Authorization: Bearer $TOKEN" \
      -H "Content-Type: application/json" \
      -d '{"filter":"","page":1,"pageSize":10}')
    
    echo "üì§ Resposta:"
    echo "$RESPONSE" | jq
}

# Iniciar o servidor de fun√ß√µes localmente
start_functions_server() {
    echo -e "${GREEN}üöÄ Iniciando servidor de fun√ß√µes Edge...${NC}"
    supabase functions serve &
    FUNCTIONS_PID=$!
    
    # Aguardar o servidor iniciar
    echo "‚è≥ Aguardando o servidor iniciar..."
    sleep 5
    
    return $FUNCTIONS_PID
}

# Parar o servidor de fun√ß√µes
stop_functions_server() {
    echo -e "\n${GREEN}üõë Parando servidor de fun√ß√µes Edge...${NC}"
    kill $1
    wait $1 2>/dev/null
}

# Menu principal
echo -e "\n${GREEN}Escolha a fun√ß√£o para testar:${NC}"
echo "1) user-management"
echo "2) list-users"
echo "3) Testar todas as fun√ß√µes"
echo "q) Sair"

read -p "Op√ß√£o: " option

case $option in
    1)
        start_functions_server
        SERVER_PID=$?
        test_user_management
        stop_functions_server $SERVER_PID
        ;;
    2)
        start_functions_server
        SERVER_PID=$?
        test_list_users
        stop_functions_server $SERVER_PID
        ;;
    3)
        start_functions_server
        SERVER_PID=$?
        test_user_management
        test_list_users
        stop_functions_server $SERVER_PID
        ;;
    q|Q)
        echo "Saindo..."
        exit 0
        ;;
    *)
        echo -e "${RED}Op√ß√£o inv√°lida!${NC}"
        exit 1
        ;;
esac

echo -e "\n${GREEN}‚úÖ Teste conclu√≠do!${NC}"
